# This has to take preference over the global flags...
<jscoq/coq-js/jslib.ml>: warn(-39), warn_error(-39)
<jscoq/coq-js/jslib.ml{,i}>: package(yojson,ppx_deriving_yojson)

# Coq-specific linking flags
true: rectypes, thread, safe_string

# Sertop/Serlib general flags
true: warn(+1..49-4-44-45), warn_error(+1..49-42), bin_annot, annot, debug

# Serlib building options
<serlib/*.{ml,mli}>: package(sexplib,coq.intf,coq.stm)
<serlib/*.{ml}>: package(ppx_import,ppx_sexp_conv)

<serlib/ide/*.{ml,mli}>: package(sexplib,coq.intf,coq.ide)
<serlib/ide/*.{ml}>: package(ppx_import,ppx_sexp_conv)

<serlib/plugins/ltac/*.{ml,mli}>: package(sexplib,coq.intf,coq.ltac)
<serlib/plugins/ltac/*.{ml}>: package(ppx_import,ppx_sexp_conv)

# Sertex building options
<sertex/*.{ml,mli}>: package(sexplib)

# Serapi building options
<serapi/*>: package(coq.intf,coq.ltac)

# For sexp_option, etc...
<serapi/serapi_protocol.{ml,mli}>: package(sexplib)

# Sertop building options
<serlib>: include
<serlib/ide>: include
<serlib/plugins/ltac>: include

<sertex>: include
<serapi>: include

# Specifip to toplevel
<sertop/sertop_ser.ml>: package(ppx_import,ppx_sexp_conv)
<sertop/sertop_arg.ml{i,}>: package(cmdliner)
<sertop/sertop.ml>: package(cmdliner)
<sertop/*>: package(coq.intf,coq.stm,coq.ltac,sexplib), debug

# Some plugins need num.
<sertop/sertop.{byte,native}>: linkall, package(dynlink,camlp5.gramlib,cmdliner,num,ppx_sexp_conv.runtime-lib)

<sertop/sercomp.ml>: package(cmdliner)
<sertop/sercomp.{byte,native}>: linkall, package(dynlink,camlp5.gramlib,cmdliner,num,ppx_sexp_conv.runtime-lib)

# JsCoq helpers
<jscoq/coq-js>: include
<jscoq/coq-js/*.{ml,mli}>: package(yojson)
<jscoq/coq-js/jslibmng.mli>: package(lwt)
<jscoq/coq-js/jslibmng.ml>: package(js_of_ocaml-lwt,yojson,ppx_deriving_yojson,coq.stm)

# Js Toplevel
<sertop/sertop_js.ml>: package(js_of_ocaml-lwt,ppx_import,ppx_sexp_conv)
<sertop/sertop_js.byte>: linkall, package(dynlink,camlp5.gramlib,yojson,ppx_deriving_yojson,js_of_ocaml-lwt)

# Don't mess with this.
<js>: -traverse
<jscoq/coq-libjs>: -traverse
